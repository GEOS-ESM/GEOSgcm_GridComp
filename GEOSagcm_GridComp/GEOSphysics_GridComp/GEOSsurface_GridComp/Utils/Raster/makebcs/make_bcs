#!/bin/tcsh -f 

################################################################################
# Help                                                                         #
################################################################################

set HELPMODE = NO
if ( "$1" == "-h" | "$1" == "-help" | "$1" == "--help" ) set HELPMODE = YES

if ( $HELPMODE == YES ) then

   echo "Usage: `basename $0` [-h]                                               "
   echo "                                                                        "
   echo "Boundary Conditions (BCs) Package:                                      " 
   echo "   Creates surface tile and other model parameter input files           "
   echo "   (.til [tiles], .rst [raster], and land parameters) for               "
   echo "   combinations of atmospheric resolution, ocean resolution,            "
   echo "   and land BCs version.                                                "
   echo "                                                                        "
   echo "   STEP 1: Build the model.      (GCM or GEOSldas)                      "
   echo "   STEP 2: cd [install-path]/bin                                        "
   echo "   STEP 3: source g5_modules     (for bash or zsh use g5_modules.[z]sh) "
   echo "   STEP 4: ./make_bcs                                                   "
   echo "           Answer the following interactive questions:                  "
   echo "           a) Select Land BCs version.                                  "
   echo "           b) Select atmospheric resolution(s).                         "
   echo "                (If applicable, select EASE grid version.)              "
   echo "           c) Select ocean resolution(s).                               "
   echo "                (Not relevant for land-only EASE grid BCs.)             "
   echo "           d) Enter BCs output directory.                               "
   echo "           e) Enter sponsor code for computing account.                 "
   echo "                                                                        "
   echo "   To skip the generation of land parameter files (ie, mkCatchParam.x), "
   echo "   use:  ./make_bcs -noland                                             "
   echo "   This option saves time when additional bcs are created that have     "
   echo "   the exact same land parameters as an existing set of bcs because     "
   echo "   the only difference between the two sets of bcs is the [non-tripolar]"
   echo "   ocean resolution.                                                    "

endif

#######################################################################

# process input arguments

set SKIPLAND = NO
if ( "$1" == "-noland" ) set SKIPLAND = YES

#######################################################################
#                     Set GEOS5/ESMADIR Variables
#######################################################################

if ( $HELPMODE != YES ) then

   #setenv NCPUS `/usr/bin/lscpu | grep '^CPU(s)' | cut -d ':' -f2 | head -1 `
   #@ NCPUS = $NCPUS / 4
   #@ NCPUS = $NCPUS * 3
   set NCPUS = 20
   setenv OMP_NUM_THREADS  1

endif
   
#######################################################################
#                            Define Colors
#         Note:  For No Colors, set C1 and C2 to NONE 
#######################################################################

set BLACK   = "\033[30m"
set RED     = "\033[31m"
set GREEN   = "\033[32m"
set YELLOW  = "\033[33m"
set BLUE    = "\033[34m"
set MAGENTA = "\033[35m"
set CYAN    = "\033[36m"
set WHITE   = "\033[37m"
set RESET   = "\033[0m"
set BOLD    = "\033[1m"

#######################################################################
#######################################################################

set bin_dir = `pwd`  # make_bcs must be run from install/bin directory

set C1 = $RED
set C2 = $BLUE
set CR = $RESET

#######################################################################
#
# Land bcs version (LBCSV)

# set default land bcs version
set lbcsv = NL3

if ( $HELPMODE != YES ) then
   echo "${CR}"
   echo "----------------------------------------------------------------------------------------------"
   echo "                  Boundary Conditions (BCs) Package:"    
   echo "----------------------------------------------------------------------------------------------"
endif
   
echo " "
echo "Options for land BCs version:"
echo " "
echo "   ${C2}F25 = Fortuna-2_5   (archived${CR}${C1}*${CR}${C2}: n/a)${CR}"
echo "   ${C2}GM4 = Ganymed-4_0   (archived${CR}${C1}*${CR}${C2}: /discover/nobackup/ltakacs/bcs/Ganymed-4_0/)${CR}"
echo "   ${C2}ICA = Icarus        (archived${CR}${C1}*${CR}${C2}: /discover/nobackup/ltakacs/bcs/Icarus/)${CR}"
echo "   ${C2}NL3 = Icarus-NLv3   (archived${CR}${C1}*${CR}${C2}: /discover/nobackup/ltakacs/bcs/Icarus-NLv3/)${CR}"
echo "   ${C2}NL4 = NLv4 [SMAPL4] (archived${CR}${C1}*${CR}${C2}: /discover/nobackup/projects/gmao/smap/bcs_NLv4/NLv4/)${CR}"
echo "   ${C2}      = NL3 + JPL veg height{CR}"
echo "   ${C2}NL5 = NLv5 [SMAPL4] (archived${CR}${C1}*${CR}${C2}: /discover/nobackup/projects/gmao/smap/SMAP_L4/L4_SM/bcs/CLSM_params/Icarus-NLv5_EASE/)${CR}"
echo "   ${C2}      = NL3 + JPL veg height + PEATMAP${CR}"
echo "   ${C2}v06   = NL3 + JPL veg height + PEATMAP + MODIS snow alb${CR}"
echo "   ${C2}v07   = NL3 + PEATMAP${CR}"
echo "   ${C2}v08   = NL3 + MODIS snow alb${CR}"
echo "   ${C2}v09   = NL3 + PEATMAP + MODIS snow alb${CR}"
echo "  "
if ( $HELPMODE != YES ) then        
   echo "                         ${C1}       *BCs produced by this code will differ from BCs in archived directories\!\!\! ${CR}"
   echo "                                 These differences are caused by compiler changes, code improvements and bug"
   echo "                                 fixes that were implemented since the archived BCs in the above-mentioned"
   echo "                                 directories were originally created.  The impact of these differences on"
   echo "                                 science is insignificant, and the parameter files produced by current"
   echo "                                 code are scientifically equivalent to the corresponding archived BCs."
   echo "                                 "
   echo " Enter one 3-character alphanumeric code for land BCs version from the above list"
   echo "   OR press ENTER to select $lbcsv (current default):${CR}"
   echo " "

   LBCSV:
   set dummy = `echo $<`
   
   if( $dummy == 'F25'  | \
       $dummy == 'GM4'  | \
       $dummy == 'ICA'  | \
       $dummy == 'NL3'  | \
       $dummy == 'NL4'  | \
       $dummy == 'NL5'  | \
       $dummy == 'v06'  | \
       $dummy == 'v07'  | \
       $dummy == 'v08'  | \
       $dummy == 'v09') then
      set lbcsv = $dummy
   else if ( $dummy == '' ) then
      echo $lbcsv
   else
      echo " "
      echo " ${C1} Invalid choice.  Note that entry is case-sensitive.  Try again:${CR}"
      goto LBCSV
   endif

endif

#######################################################################
#
# Atmospheric Horizontal Resolution (HRCODE)

echo "Options for atmospheric horizontal resolution:"
echo " "
echo "   Lat/Lon            Cubed-Sphere                   EASE (land-only)"
echo "   ${C2}b -- 2   deg         c12 -- 8    deg              M01 --  1-km EASE Grid ${CR}"
echo "   ${C2}c -- 1   deg         c24 -- 4    deg              M03 --  3-km EASE Grid ${CR}"
echo "   ${C2}d -- 1/2 deg         c48 -- 2    deg              M09 --  9-km EASE Grid ${CR}"
echo "   ${C2}e -- 1/4 deg         c90 -- 1    deg              M25 -- 25-km EASE Grid ${CR}"
echo "   ${C2}                    c180 -- 1/2  deg ${C1}( 56   km) ${CR}  ${C2}M36 -- 36-km EASE Grid ${CR}"
echo "   ${C2}                    c360 -- 1/4  deg ${C1}( 28   km) ${CR}"
echo "   ${C2}                    c720 -- 1/8  deg ${C1}( 14   km) ${CR}"
echo "   ${C2}                    c768 -- 1/10 deg ${C1}( 12   km) ${CR}"
echo "   ${C2}                   c1000 -- 1/10 deg ${C1}( 10   km) ${CR}"
echo "   ${C2}                   c1152 -- 1/10 deg ${C1}(  8   km) ${CR}"
echo "   ${C2}                   c1440 -- 1/16 deg ${C1}(  7   km) ${CR}"
echo "   ${C2}                   c1536 -- 1/16 deg ${C1}(  7   km) ${CR}"
echo "   ${C2}                   c2880 -- 1/32 deg ${C1}(  3   km) ${CR}"
echo "   ${C2}                   c3072 -- 1/32 deg ${C1}(  3   km) ${CR}"
echo "   ${C2}                   c5760 -- 1/64 deg ${C1}(  1.5 km) ${CR}"
#echo "   ${C2}o --  other${CR} Lat/Lon or Cube"
echo " "                                                        

if ( $HELPMODE != YES ) then

   echo " "
   echo "Enter alphanumeric code(s) for atmospheric horizontal resolution from the above list"
   echo "(separate multiple entries by spaces):"

   HRCODE:
   set dummy = `echo $<`
   if (${%dummy} == 0) set dummy = "BLANK"
   
   set HRCODES =  $dummy[1]

   foreach HRCODE ($dummy)
      if( $HRCODE != 'o'       & \
          $HRCODE != 'b'       & \
          $HRCODE != 'c'       & \
          $HRCODE != 'd'       & \
          $HRCODE != 'e'       & \
          $HRCODE != 'c12'     & \
          $HRCODE != 'c24'     & \
          $HRCODE != 'c48'     & \
          $HRCODE != 'c90'     & \
          $HRCODE != 'c180'    & \
          $HRCODE != 'c360'    & \
          $HRCODE != 'c720'    & \
          $HRCODE != 'c768'    & \
          $HRCODE != 'c1000'   & \
          $HRCODE != 'c1152'   & \
          $HRCODE != 'c1440'   & \
          $HRCODE != 'c1536'   & \
          $HRCODE != 'c2880'   & \
          $HRCODE != 'c3072'   & \
          $HRCODE != 'c5760'   & \
          $HRCODE != 'M01'     & \
          $HRCODE != 'M03'     & \
          $HRCODE != 'M09'     & \
          $HRCODE != 'M25'     & \
          $HRCODE != 'M36')    then  
          echo " ${C1} Invalid choice.  Note that entries are case-sensitive.  Try again:${CR}"
          goto HRCODE
      endif
      if( $HRCODE != "$HRCODES" ) set HRCODES = `echo ${HRCODES} ${HRCODE}`
   end

   if( $HRCODE == o ) then
      echo "Enter the Atmospheric ${C1}Horizontal Resolution${CR}: ${C2}IM JM${CR}"
      echo "                      Note for ${C1}Cubed-Sphere${CR}: ${C2}JM must equal 6*IM${CR}"
      set Resolution = `echo $<`
   endif

else

   set HRCODE  = null
   set HRCODES = null
   
endif   # if ( $HELPMODE != YES )

# --------------------------------
# 
# EASE Grid Version (EASEVERSION)

# set default EASE version
set EASEVERSION = EASEv2

echo "                                                     Options for EASE grid version (land-only):"
echo "                                                     ${C2}EASEv1${CR}"
echo "                                                     ${C2}EASEv2 (default)${CR}"
echo " "

set isEASE = 0

if ( $HELPMODE != YES ) then

    # figure out if one or more of the selected atmospheric resolutions is an EASE grid

    foreach HRCODE ($HRCODES)
	if( $HRCODE == 'M01'    | \
            $HRCODE == 'M03'    | \
            $HRCODE == 'M09'    | \
            $HRCODE == 'M25'    | \
            $HRCODE == 'M36')         then  
	      set isEASE = 1
        endif
    end

    if ( $isEASE > 0 ) then

	echo "Enter one EASE grid version from the above list"
	echo "  OR press ENTER to select $EASEVERSION (current default):${CR}"
	echo " "

	EASE_VERSION:
	set dummy = `echo $<`

	if( $dummy == 'EASEv1'  | \
	    $dummy == 'EASEv2')       then 
	    set EASEVERSION = $dummy
	else if ( $dummy == '' ) then
	    echo $EASEVERSION
	else
	    echo " "
	    echo " ${C1} Invalid choice.  Note that entry is case-sensitive.  Try again:${CR}"
	    echo " "
	    goto EASE_VERSION
	endif
    endif
   
endif

#######################################################################
#
# Ocean Horizontal Resolution (ORSLV)

if ($isEASE > 0) then
   set orslvs = O1

   echo " ${C1}----------------------------------------------------------------------- ${CR}"
   echo " ${C1}   Selected atmospheric resolution(s) include(s) at least one EASE grid.${CR}"
   echo " ${C1}   Setting ${CR}ocean resolution ${C1}to $orslvs \!\!\!                 ${CR}"
   echo " ${C1}   For a choice of ocean resolutions, exclude EASE grid selection(s)    ${CR}"
   echo " ${C1}   from selected atmospheric resolution(s) and process separately.      ${CR}"
   echo " ${C1}------------------------------------------------------------------------${CR}"
   echo " "
else
   echo "Options for ocean horizontal resolution:"
   echo " "
   echo "   ${C2}O1     --  Low-Resolution  Reynolds 1   deg${CR} (Lon/Lat Data-Ocean:    360x180 )"
   echo "   ${C2}O2     --  Med-Resolution  Reynolds 1/4 deg${CR} (Lon/Lat Data-Ocean:   1440x720 )"
   echo "   ${C2}O3     --  High-Resolution    OSTIA 1/8 deg${CR} (Lon/Lat Data-Ocean:   2880x1440)"
   echo "   ${C2}T2     --  Med-Resolution  Tripolar 1   deg${CR} (MOM-Tripolar-Ocean:    360x200 )"
   echo "   ${C2}T3     --  High-Resolution Tripolar 1/2 deg${CR} (MOM-Tripolar-Ocean:    720x410 )"
   echo "   ${C2}T4     --  High-Resolution Tripolar 1/4 deg${CR} (MOM-Tripolar-Ocean:   1440x1080)"
   echo "   ${C2}T1MOM6 --  Low-Resolution  Tripolar 5   deg${CR} (MOM6-Tripolar-Ocean:    72x36  )"
#  echo "   ${C2}T2MOM6 --  Med-Resolution  Tripolar 1   deg${CR} (MOM6-Tripolar-Ocean:   360x210 )"
   echo "   ${C2}T4MOM6 --  High-Resolution Tripolar 1/4 deg${CR} (MOM6-Tripolar-Ocean:  1440x1080)"
   echo "   ${C2}CS     --  Cubed-Sphere Ocean              ${CR} (Cubed-Sphere Data-Ocean        )"
   echo " "

   if ( $HELPMODE == YES ) exit 

   echo " "
   echo "Enter 2-6 character alphanumeric code(s) for ocean horizontal resolution from the above list."
   echo "(Separate multiple entries by spaces.)"

ORSLV:

   set dummy = `echo $<`

   if (${%dummy} == 0) set dummy = "BLANK"
   
   set orslvs =  $dummy[1]

   foreach orslv ($dummy)
      if( $orslv != 'O1'     & \
          $orslv != 'O2'     & \
          $orslv != 'O3'     & \
          $orslv != 'T2'     & \
          $orslv != 'T3'     & \
          $orslv != 'T4'     & \
          $orslv != 'T1MOM6' & \
          $orslv != 'T2MOM6' & \
          $orslv != 'T4MOM6' & \
          $orslv != 'CS')    then
          echo " ${C1} Invalid choice.  Note that entries are case-sensitive.  Try again:${CR}"
          goto ORSLV
      endif
      if( $orslv != "$orslvs" ) set orslvs = `echo ${orslvs} ${orslv}`
   end

endif
    

#######################################################################
#
# Experiment directory (for BCS output)

# define default
set EXPDIR = /discover/nobackup/$USER/BCS_PACKAGE/$lbcsv

# append minor version string to default bcs output dir name if output from current code differs from archived bcs

if( $lbcsv == 'F25'  | \
    $lbcsv == 'GM4'  | \
    $lbcsv == 'ICA'  | \
    $lbcsv == 'NL3'  | \
    $lbcsv == 'NL4'  | \
    $lbcsv == 'NL5') then
   set EXPDIR = $EXPDIR'_2/'
   echo "----------------------------------------------------------------------------------------------"
   echo " "
   echo " ${C1} NOTE: $lbcsv BCs produced by this code will differ from BCs in archived directories\!\!\! ${CR}"
   echo " ${C1}       For clarity, '_[v]' was appended to the default output directory shown below.${CR}"
else
   # just append trailing slash
   set EXPDIR = $EXPDIR'/'
endif

if ( $HELPMODE != YES ) then

   echo " "
   echo "Enter desired BCS output directory (incl. full path) or press ENTER to use the default:"
   echo "   [${C2}${EXPDIR}${CR}]"
   set NEWEXPDIR = $<

   if( $NEWEXPDIR != '' ) set EXPDIR = $NEWEXPDIR

   mkdir -p $EXPDIR
   if ($status>0) then
      echo "mkdir ERROR! Exiting..."
      exit
   endif
endif


#######################################################################

echo    ""
echo    "${C1} Land BCs version:${CR}       ${C2}$lbcsv${CR}"
echo    "${C1} Atmospheric resolution:${CR} ${C2}$HRCODES${CR}"
if ( $isEASE > 0) then
   echo "${C1} EASE grid version:${CR}      ${C2}$EASEVERSION${CR}"
endif
echo    "${C1} Ocean resolution:${CR}       ${C2}$orslvs${CR}"
echo    "${C1} Output directory:${CR}       ${C2}$EXPDIR${CR}"

#######################################################################
#######################################################################

set IRRIGTHRES = 2
set make_bcs_jobs = ''

# ------------------------------------
# Loop over All Ocean Resolution Codes
# ------------------------------------

foreach orslv ($orslvs)

#######################################################################
#                Select land-lakes-ice-ocean mask file
#######################################################################

set HOSTNAME = `hostname | rev | cut -c3- | rev`

if ( $HOSTNAME == discover ) then
    setenv MAKE_BCS_INPUT_DIR /discover/nobackup/projects/gmao/bcs_shared/make_bcs_inputs/
else
    setenv MAKE_BCS_INPUT_DIR /nobackup/gmao_SIteam/ModelData/make_bcs_inputs/               
endif

if ( $orslv == O1 | $orslv == T2 | $orslv == T3 | $orslv == T4 | \
    $orslv == T1MOM6 | $orslv == T2MOM6 | $orslv == T4MOM6 ) then

# Great-Lakes & Caspian-Sea treated as Model LAKE tiles, Surface Temperatures will be Model Derived
# -------------------------------------------------------------------------------------------------

    if ( $lbcsv == F25 | $lbcsv == GM4 | $lbcsv == ICA ) then
	set GLOBAL_CATCH_DATA = ${MAKE_BCS_INPUT_DIR}/shared/mask/global.cat_id.catch.DL
    else
	set GLOBAL_CATCH_DATA = ${MAKE_BCS_INPUT_DIR}/shared/mask/GEOS5_10arcsec_mask_freshwater-lakes.nc
    endif

	 
else if ( $orslv == O2 | $orslv == O3 | $orslv == CS ) then

# Great-Lakes & Caspian-Sea treated as Model OCEAN tiles, Surface Temperatures will be taken from OCEAN SST Data
# --------------------------------------------------------------------------------------------------------------

    if ( $lbcsv == F25 | $lbcsv == GM4 | $lbcsv == ICA ) then
	set GLOBAL_CATCH_DATA = ${MAKE_BCS_INPUT_DIR}/shared/mask/global.cat_id.catch.GreatLakesCaspian_Updated.DL
    else
	set GLOBAL_CATCH_DATA = ${MAKE_BCS_INPUT_DIR}/shared/mask/GEOS5_10arcsec_mask.nc
    endif
    
else

    echo " \!\!\!\! Invalid Ocean Resolution, stopping \!\!\!\! "
    exit

endif

if($HRCODE == M01 | $HRCODE == M03 | $HRCODE == M09 | $HRCODE == M25 | $HRCODE == M36) then
     set GLOBAL_CATCH_DATA = ${MAKE_BCS_INPUT_DIR}/shared/mask/GEOS5_10arcsec_mask.nc
endif

set MASKFILE = `echo ${GLOBAL_CATCH_DATA} | rev | cut -d / -f1 | rev `

#######################################################################

echo ""
    
@ imo = 0 
@ jmo = 0 
@ NX = 8640
@ NY = 4320 
@ NT = 232000000

set LATLON_OCEAN = FALSE
set TRIPOL_OCEAN = FALSE
set CUBED_SPHERE_OCEAN = FALSE

if( $orslv == O1 ) then
    @ imo = 360   # Lat/Lon Data-Ocean (Reynolds 1-deg)
    @ jmo = 180   # Lat/Lon Data-Ocean (Reynolds 1-deg)
endif
if( $orslv == O2 ) then
    @ imo = 1440  # Lat/Lon Data-Ocean (Reynolds 1/4-deg)
    @ jmo = 720   # Lat/Lon Data-Ocean (Reynolds 1/4-deg)
endif
if( $orslv == O3 ) then
    @ imo = 2880  # Lat/Lon Data-Ocean (OSTIA 1/8-deg)
    @ jmo = 1440  # Lat/Lon Data-Ocean (OSTIA 1/8-deg)
endif
if( $orslv == T2 ) then
    @ imo = 360  # MOM Tripolar-Ocean
    @ jmo = 200  # MOM Tripolar-Ocean
endif
if( $orslv == T3 ) then
    @ imo = 720   # MOM Tripolar-Ocean
    @ jmo = 410   # MOM Tripolar-Ocean
endif
if( $orslv == T4 ) then
    @ imo = 1440   # MOM Tripolar-Ocean
    @ jmo = 1080   # MOM Tripolar-Ocean
endif
if( $orslv == T1MOM6 ) then
    @ imo = 72  # MOM6 Tripolar-Ocean
    @ jmo = 36  # MOM6 Tripolar-Ocean
endif
if( $orslv == T2MOM6 ) then
    @ imo = 360  # MOM6 Tripolar-Ocean
    @ jmo = 210  # MOM6 Tripolar-Ocean
endif
if( $orslv == T4MOM6 ) then
    @ imo = 1440   # MOM6 Tripolar-Ocean
    @ jmo = 1080   # MOM6 Tripolar-Ocean
endif

if( $orslv == O1 | $orslv == O2| $orslv == O3 ) then
    set LATLON_OCEAN = TRUE
    set     DATENAME = DE
    set     POLENAME = PE
endif
set  MOM_VERSION = MOM5
if( $orslv == T2 | $orslv == T3 | $orslv == T4 ) then 
    set TRIPOL_OCEAN = TRUE
    set  MOM_VERSION = MOM5
    set     DATENAME = TM
    set     POLENAME = TM
else if ( $orslv == T1MOM6 | $orslv == T2MOM6 | $orslv == T4MOM6 ) then
    set TRIPOL_OCEAN = TRUE
    set  MOM_VERSION = MOM6
    set     DATENAME = TM
    set     POLENAME = TM
endif
if( $orslv == CS ) set CUBED_SPHERE_OCEAN = TRUE

# -------------------------------------
# Loop over All Atmospheric Resolutions
# -------------------------------------

foreach HRCODE ($HRCODES)

if( $HRCODE == o ) then
     set im = $Resolution[1]
     set jm = $Resolution[2]
     @  im6 = $im * 6
     if( $im6 == $jm ) then
         set nc = ${im}
         set RC = ${im}x${jm}
         set grid = cube
     else
         set grid = latlon
     endif
endif

if( $HRCODE == b ) then
     set im = 144
     set jm = 91
     set grid = latlon
endif
if( $HRCODE == c ) then
     set im = 288
     set jm = 181
     set grid = latlon
endif
if( $HRCODE == d ) then
     set im = 576
     set jm = 361
     set grid = latlon
endif
if( $HRCODE == e ) then
     set im = 1152
     set jm = 721
     set grid = latlon
endif
if( $HRCODE == c12 ) then
     set nc = 12
     set RC = 12x72
     set grid = cube
endif
if( $HRCODE == c24 ) then
     set nc = 24
     set RC = 24x144
     set grid = cube
endif
if( $HRCODE == c48 ) then
     set nc = 48
     set RC = 48x288
     set grid = cube
endif
if( $HRCODE == c90 ) then
     set nc = 90
     set RC = 90x540
     set grid = cube
endif
if( $HRCODE == c180 ) then
     set nc = 180
     set RC = 180x1080
     set grid = cube
endif
if( $HRCODE == c360 ) then
     set nc = 360
     set RC = 360x2160
     set grid = cube
endif
if( $HRCODE == c720 ) then
     set nc = 720
     set RC = 720x4320
     set grid = cube
endif
if( $HRCODE == c768 ) then
     set nc = 768
     set RC = 768x4608
     set grid = cube
     @ NX = 17280
     @ NY = 8640
endif
if( $HRCODE == c1000 ) then
     set nc = 1000
     set RC = 1000x6000
     set grid = cube
endif
if( $HRCODE == c1152 ) then
     set nc = 1152
     set RC = 1152x6912
     set grid = cube
endif
if( $HRCODE == c1440 ) then
     set nc = 1440
     set RC = 1440x8640
     set grid = cube
     @ NX = 17280
     @ NY = 8640
endif
if( $HRCODE == c1536 ) then
     set nc = 1536
     set RC = 1536x9216
     set grid = cube
     @ NX = 43200
     @ NY = 21600
endif
if( $HRCODE == c2880 ) then
     set nc = 2880
     set RC = 2880x17280
     set grid = cube
     @ NX = 21600
     @ NY = 10800
endif
if( $HRCODE == c3072 ) then
     set nc = 3072
     set RC = 3072x18432
     set grid = cube
     @ NX = 43200
     @ NY = 21600
endif
if( $HRCODE == c5760 ) then
     set nc = 5760
     set RC = 5760x34560
     set grid = cube
     @ NX = 43200
     @ NY = 21600
endif

if ( $isEASE > 0 ) then

    set grid = ease

    # im, jm must be consistent with values Fortran module EASE_conv

    if      ( $EASEVERSION == EASEv1 ) then

	if( $HRCODE == M01 ) then
	    set im = 34668                
	    set jm = 14688
	endif
	if( $HRCODE == M03 ) then
	    set im = 11556
	    set jm = 4896
	endif
	if( $HRCODE == M09 ) then
	    set im = 3852
	    set jm = 1632
	endif
	if( $HRCODE == M25 ) then
	    set im = 1383
	    set jm = 586
	endif
	if( $HRCODE == M36 ) then
	    set im = 963
	    set jm = 408
	endif

    else if ( $EASEVERSION == EASEv2 ) then

	if( $HRCODE == M01 ) then
	    set im = 34704                
	    set jm = 14616
	endif
	if( $HRCODE == M03 ) then
	    set im = 11568
	    set jm = 4872
	endif
	if( $HRCODE == M09 ) then
	    set im = 3856
	    set jm = 1624
	endif
	if( $HRCODE == M25 ) then
	    set im = 1388
	    set jm = 584
	endif
	if( $HRCODE == M36 ) then
	    set im = 964
	    set jm = 406
	endif

    else

	echo " \!\!\!\! Invalid EASE grid version, stopping \!\!\!\! "
	exit
	
    endif
endif


if( $MASKFILE == GEOS5_10arcsec_mask_freshwater-lakes.nc | $MASKFILE == GEOS5_10arcsec_mask.nc ) then
     @ NX = 43200
     @ NY = 21600
endif

set OUTDIR = `date +'%Y%m%d%H%M%S'`

# -------------------------
# Get SPONSOR GROUP ID
# -------------------------

set group = ""
set sponsorinfo = `getsponsor`

while ("$group" == "")
   @ n = 1
   while ($n < $#sponsorinfo)
      if ($sponsorinfo[$n] =~ g[0..9]*) then
         set group = $sponsorinfo[$n]
         #--break  # uncomment this line to make 1st entry the default
      endif
      @ n++
   end

   getsponsor
   if ("$group" != "") then
      echo -n "select group: [$group] "
   else
      echo -n "select group:  "
   endif
   
   set reponse = $<
   if ("$reponse" != "") set group = $reponse
   
end

#######################################################################
#                        LatLon Case
#######################################################################



if( $grid == latlon ) then

set RS  = ${im}x${jm}
set IM  = `echo ${im}   | awk '{printf "%4.4i", $1}'`
set JM  = `echo ${jm}   | awk '{printf "%4.4i", $1}'`
set IMO = `echo ${imo}  | awk '{printf "%4.4i", $1}'`
set JMO = `echo ${jmo}  | awk '{printf "%4.4i", $1}'`

set DATENAME = DE
set POLENAME = PE

set             BCNAME = DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}
set             BCDIR  = $EXPDIR/$OUTDIR/$BCNAME.scratch
set             BCJOB  = $BCDIR/$BCNAME.j

set nfiles = `find $EXPDIR -maxdepth 5 -name ${BCNAME}".j" | wc -l`  
if( $nfiles >= 1 ) then
  echo ""
  echo "${C1} ----------------------------------------------------${CR}"
  echo "${C1}                 Abort:                              ${CR}"
  echo "${C2} This BCS run $BCDIR ${CR}"
  echo "${C2} will create resolution dir already present: $BCNAME ${CR}"
  echo "${C2} Please delete run dir and same resolution BCS files and resubmit"
  echo "${C1} ----------------------------------------------------${CR}"
  echo ""
  exit
endif

mkdir -p $BCDIR 
mkdir -p $EXPDIR/$OUTDIR/logs

echo "${C1}     Creating:${CR} ${C2}$BCJOB${CR}"
/bin/rm -f     $BCJOB
cat << _EOF_ > $BCJOB
#!/bin/csh -x

#SBATCH --output=$EXPDIR/$OUTDIR/logs/$BCNAME.log
#SBATCH --error=$EXPDIR/$OUTDIR/logs/$BCNAME.err
#SBATCH --account=$group
#SBATCH --time=12:00:00
#SBATCH --ntasks=28
#SBATCH --job-name=$BCNAME.j
#SBATCH --constraint=sky

cd $BCDIR

/bin/ln -s $bin_dir
source bin/g5_modules
mkdir -p til rst data/MOM5 data/MOM6 clsm/plots
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/360x200 data/MOM5/360x200
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/720x410 data/MOM5/720x410
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/1440x1080 data/MOM5/1440x1080
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/72x36 data/MOM6/72x36
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/1440x1080 data/MOM6/1440x1080

cd data 

cd ../

if( -e DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout ) /bin/rm -f DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout
setenv MASKFILE $MASKFILE
limit stacksize unlimited
bin/mkLatLonRaster.x -x ${NX} -y ${NY}  -t -1 ${IM} ${JM} >/dev/null
bin/mkLandRaster.x -x ${NX} -y ${NY} -v -t ${NT}

if( $LATLON_OCEAN == TRUE ) then
    bin/mkLatLonRaster.x -x ${NX} -y ${NY} -b DE -p PE -t 0 ${IMO} ${JMO} >/dev/null
    bin/CombineRasters.x -f 0 -t ${NT} DE${IMO}xPE${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} DC${IM}xPC${JM} DE${IMO}xPE${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g DC${IM}xPC${JM}_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g DC${IM}xPC${JM}_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif
if( $TRIPOL_OCEAN == TRUE ) then
	bin/mkMOMAquaRaster.x -x $NX -y $NY  data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc > /dev/null
    /bin/cp til/Pfafstetter.til til/Pfafstetter-ORIG.til
    /bin/cp rst/Pfafstetter.rst rst/Pfafstetter-ORIG.rst
    bin/FillMomGrid.x -f 0 -g Pfafstetter-M ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc 
    /bin/mv til/Pfafstetter-M.til til/Pfafstetter.til
    /bin/mv rst/Pfafstetter-M.rst rst/Pfafstetter.rst
    bin/CombineRasters.x -f 0 -t ${NT} ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} DC${IM}xPC${JM} ${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    bin/mk_runofftbl.x DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g DE${IMO}xPE${JMO}_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g DE${IMO}xPE${JMO}_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh    
endif

/bin/mv clsm  clsm.${IM}x${JM}
/bin/cp til/DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til clsm.${IM}x${JM}
if( $TRIPOL_OCEAN == TRUE ) /bin/cp til/DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.TRN clsm.${IM}x${JM}
/bin/rm clsm.${IM}x${JM}/DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.file

cd clsm.${IM}x${JM}
   /bin/mv irrig.dat irrigation_${RS}_DC.dat
   /bin/mv vegdyn.data   vegdyn_${RS}_DC.dat
   /bin/mv nirdf.dat      nirdf_${RS}_DC.dat
   /bin/mv visdf.dat      visdf_${RS}_DC.dat
   /bin/mv   lai.dat   lai_clim_${RS}_DC.data
   /bin/mv green.dat green_clim_${RS}_DC.data
   /bin/mv lnfm.dat   lnfm_clim_${RS}_DC.data
   /bin/mv ndvi.dat   ndvi_clim_${RS}_DC.data

/bin/rm -f sedfile
cat > sedfile << EOF
s/DC${IM}xPC${JM}/PC${im}x${jm}-DC/g
s/${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter/PE${imo}x${jmo}-${DATENAME}/g
EOF
sed -f sedfile       DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til > tile.file
/bin/mv -f tile.file DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til
/bin/rm -f sedfile

cd ../

/bin/rm -rf              DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv clsm.${IM}x${JM} DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}
                     cd  DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}
              mkdir clsm
            /bin/mv ar.new \
                    bf.dat \
                    ts.dat \
                    catchment.def \
                    cti_stats.dat \
                    tau_param.dat \
                    soil_param.dat \
                    mosaic_veg_typs_fracs \
		    soil_param.first \
		    README \
		    bad_sat_param.tiles \
		    lai.* \
                    AlbMap* \
		    plots \
                    CLM_veg_typs_fracs \
                    mkCatchParam.log \
                    CLM_NDep_SoilAlb_T2m \
                    CLM4.5_abm_peatf_gdp_hdm_fc \
  		    catch_params.nc4 \
		    catchcn_params.nc4 \
		    country_and_state_code.data \
                    clsm
                cd  ../ 

/bin/mv rst DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv til DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}

cd ../../
/bin/mv    $BCDIR/$BCNAME .
/bin/mv    $BCJOB                $BCNAME
/bin/mv    $EXPDIR/$OUTDIR/logs  $BCNAME/.
/bin/mv    $BCNAME/clsm/mkCatchParam.log $BCNAME/logs/mkCatchParam.log
/bin/rm -r $OUTDIR

#mkdir -p IRRIG/$BCNAME/clsm
#bin/mkIrrigTiles.x -b $BCNAME -t DC${IM}xPC${JM}_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til -r _${RS}_DC -p $IRRIGTHRES

_EOF_
chmod 755 $BCJOB
set make_bcs_jobs = `echo $make_bcs_jobs $BCJOB`

endif # End Latlon Test

#######################################################################
#                          Cube Case
#######################################################################

if( $grid == cube ) then

 @  nc6 =  $nc * 6
set NC  = `echo ${nc}   | awk '{printf "%4.4i", $1}'`
set IMO = `echo ${imo}  | awk '{printf "%4.4i", $1}'`
set JMO = `echo ${jmo}  | awk '{printf "%4.4i", $1}'`

if( $CUBED_SPHERE_OCEAN == TRUE ) then
	set       BCNAME = CF${NC}x6C_CF${NC}x6C
	set     DATENAME = CF
	set     POLENAME =    
	set          IMO = ${NC}
	set          JMO = 6C
else
	set       BCNAME = CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
endif

set             BCDIR  = $EXPDIR/$OUTDIR/$BCNAME.scratch
set             BCJOB  = $BCDIR/$BCNAME.j

set nfiles = `find $EXPDIR -maxdepth 5 -name ${BCNAME}".j" | wc -l`  
if( $nfiles >= 1 ) then
  echo ""
  echo "${C1} ----------------------------------------------------${CR}"
  echo "${C1}                 Abort:                              ${CR}"
  echo "${C2} This BCS run $BCDIR ${CR}"
  echo "${C2} will create resolution dir already present: $BCNAME ${CR}"
  echo "${C2} Please delete run dir and same resolution BCS files and resubmit"
  echo "${C1} ----------------------------------------------------${CR}"
  echo ""
  exit
endif

mkdir -p $BCDIR
mkdir -p $EXPDIR/$OUTDIR/logs

echo "${C1}     Creating:${CR} ${C2}$BCJOB${CR}"
/bin/rm -f     $BCJOB
if ($HRCODE == c2880 | $HRCODE == c3072 | $HRCODE == c5760) then
cat << _EOF_ > $BCJOB
#!/bin/csh -x

#SBATCH --output=$EXPDIR/$OUTDIR/logs/$BCNAME.log
#SBATCH --error=$EXPDIR/$OUTDIR/logs/$BCNAME.err
#SBATCH --account=$group
#SBATCH --time=12:00:00
#SBATCH --ntasks=1
#SBATCH --job-name=$BCNAME.j
#SBATCH --constraint=sky

cd $BCDIR

/bin/ln -s $bin_dir
source bin/g5_modules
mkdir -p til rst data/MOM5 data/MOM6 clsm/plots
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/360x200 data/MOM5/360x200
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/720x410 data/MOM5/720x410
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/1440x1080 data/MOM5/1440x1080
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/72x36 data/MOM6/72x36
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/1440x1080 data/MOM6/1440x1080

cd data 
cd ../
 
if( -e CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout ) /bin/rm -f CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout
setenv MASKFILE $MASKFILE
limit stacksize unlimited
bin/mkCubeFVRaster.x -x ${NX} -y ${NY} ${NC} >/dev/null 
bin/mkLandRaster.x -x ${NX} -y ${NY} -v -t ${NT}

if( $LATLON_OCEAN == TRUE ) then
    bin/mkLatLonRaster.x -x ${NX} -y ${NY} -b DE -p PE -t 0 ${IMO} ${JMO} >/dev/null
    bin/CombineRasters.x -f 0 -t ${NT} DE${IMO}xPE${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C DE${IMO}xPE${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
endif

if( $TRIPOL_OCEAN == TRUE ) then
	bin/mkMOMAquaRaster.x -x ${NX} -y ${NY}  data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc > /dev/null
    /bin/cp til/Pfafstetter.til til/Pfafstetter-ORIG.til
    /bin/cp rst/Pfafstetter.rst rst/Pfafstetter-ORIG.rst
    bin/FillMomGrid.x -f 0 -g Pfafstetter-M ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc 
    /bin/mv til/Pfafstetter-M.til til/Pfafstetter.til
    /bin/mv rst/Pfafstetter-M.rst rst/Pfafstetter.rst
    bin/CombineRasters.x -f 0 -t ${NT} ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C ${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    bin/mk_runofftbl.x CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter -v $lbcsv
endif

if( $CUBED_SPHERE_OCEAN == TRUE ) then
    bin/CombineRasters.x -f 0 -t ${NT} CF${NC}x6C Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C CF${NC}x6C-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_CF${NC}x6C-Pfafstetter -v $lbcsv 
endif
_EOF_

chmod 755 $BCJOB
set make_bcs_jobs = `echo $make_bcs_jobs $BCJOB`

cat << _EOF_ > $BCJOB-2
#!/bin/csh -x

#SBATCH --output=$EXPDIR/$OUTDIR/logs/$BCNAME-2.log
#SBATCH --error=$EXPDIR/$OUTDIR/logs/$BCNAME-2.err
#SBATCH --account=$group
#SBATCH --time=12:00:00
#SBATCH --ntasks=28
#SBATCH --job-name=$BCNAME-2.j
#SBATCH --constraint=sky

cd $BCDIR

source bin/g5_modules
 
setenv MASKFILE $MASKFILE
limit stacksize unlimited

if( $LATLON_OCEAN == TRUE ) then
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

if( $TRIPOL_OCEAN == TRUE ) then
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

if( $CUBED_SPHERE_OCEAN == TRUE ) then
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_CF${NC}x6C-Pfafstetter -v $lbcsv 
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

/bin/mv clsm  clsm.C${NC}
/bin/cp til/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til clsm.C${NC}
if( $TRIPOL_OCEAN == TRUE ) /bin/cp til/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.TRN clsm.C${NC}
/bin/rm clsm.C${NC}/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.file

cd clsm.C${NC}
   /bin/mv irrig.dat irrigation_${RC}.dat
   /bin/mv vegdyn.data   vegdyn_${RC}.dat
   /bin/mv nirdf.dat      nirdf_${RC}.dat
   /bin/mv visdf.dat      visdf_${RC}.dat
   /bin/mv   lai.dat   lai_clim_${RC}.data
   /bin/mv green.dat green_clim_${RC}.data
   /bin/mv lnfm.dat   lnfm_clim_${RC}.data
   /bin/mv ndvi.dat   ndvi_clim_${RC}.data

/bin/rm -f sedfile
if( $CUBED_SPHERE_OCEAN == TRUE ) then
cat > sedfile << EOF
s/${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter/OC${nc}x${nc6}-CF/g
s/CF${NC}x6C/PE${nc}x${nc6}-CF/g
EOF
sed -f sedfile       CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til > tile.file
/bin/mv -f tile.file CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til
/bin/rm -f sedfile
else
cat > sedfile << EOF
s/CF${NC}x6C/PE${nc}x${nc6}-CF/g
s/${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter/PE${imo}x${jmo}-${DATENAME}/g
EOF
sed -f sedfile       CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til > tile.file
/bin/mv -f tile.file CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til
/bin/rm -f sedfile
endif

cd ../

/bin/rm -rf         CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv clsm.C${NC} CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
                cd  CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
              mkdir clsm
            /bin/mv ar.new \
                    bf.dat \
                    ts.dat \
                    catchment.def \
                    cti_stats.dat \
                    tau_param.dat \
                    soil_param.dat \
                    mosaic_veg_typs_fracs \
		    soil_param.first \
		    README \
		    bad_sat_param.tiles \
		    lai.* \
                    AlbMap* \
		    plots \
                    CLM_veg_typs_fracs \
                    mkCatchParam.log \
                    CLM_NDep_SoilAlb_T2m \
                    CLM4.5_abm_peatf_gdp_hdm_fc \
  		    catch_params.nc4 \
		    catchcn_params.nc4 \
		    country_and_state_code.data \
                    clsm
                cd  ../ 

/bin/mv rst CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv til CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv $BCJOB-2 CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}/.
cd ../../
/bin/mv    $BCDIR/$BCNAME .
/bin/mv    $BCJOB-2              $BCNAME
/bin/mv    $EXPDIR/$OUTDIR/logs  $BCNAME/.
/bin/mv    $BCNAME/clsm/mkCatchParam.log $BCNAME/logs/mkCatchParam.log
/bin/rm -r $OUTDIR

#mkdir -p IRRIG/$BCNAME/clsm
#bin/mkIrrigTiles.x -b $BCNAME -t CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til -r _${RC} -p $IRRIGTHRES

_EOF_
chmod 755 $BCJOB-2
set make_bcs_jobs = `echo $make_bcs_jobs $BCJOB-2`

else
cat << _EOF_ > $BCJOB
#!/bin/csh -x

#SBATCH --output=$EXPDIR/$OUTDIR/logs/$BCNAME.log
#SBATCH --error=$EXPDIR/$OUTDIR/logs/$BCNAME.err
#SBATCH --account=$group
#SBATCH --time=12:00:00
#SBATCH --ntasks=28
#SBATCH --job-name=$BCNAME.j
#SBATCH --constraint=sky

cd $BCDIR

/bin/ln -s $bin_dir
source bin/g5_modules
mkdir -p til rst data/MOM5 data/MOM6 clsm/plots
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/360x200 data/MOM5/360x200
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/720x410 data/MOM5/720x410
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM5/1440x1080 data/MOM5/1440x1080
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/72x36 data/MOM6/72x36
ln -s $MAKE_BCS_INPUT_DIR/ocean/MOM6/1440x1080 data/MOM6/1440x1080

cd data 

cd ../
 
if( -e CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout ) /bin/rm -f CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}.stdout
setenv MASKFILE $MASKFILE
limit stacksize unlimited
bin/mkCubeFVRaster.x -x ${NX} -y ${NY} ${NC} >/dev/null 
bin/mkLandRaster.x -x ${NX} -y ${NY} -v -t ${NT}

if( $LATLON_OCEAN == TRUE ) then
    bin/mkLatLonRaster.x -x ${NX} -y ${NY} -b DE -p PE -t 0 ${IMO} ${JMO} >/dev/null
    bin/CombineRasters.x -f 0 -t ${NT} DE${IMO}xPE${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C DE${IMO}xPE${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_DE${IMO}xPE${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

if( $TRIPOL_OCEAN == TRUE ) then
	bin/mkMOMAquaRaster.x -x ${NX} -y ${NY}  data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc > /dev/null
    /bin/cp til/Pfafstetter.til til/Pfafstetter-ORIG.til
    /bin/cp rst/Pfafstetter.rst rst/Pfafstetter-ORIG.rst
    bin/FillMomGrid.x -f 0 -g Pfafstetter-M ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter data/${MOM_VERSION}/${imo}x${jmo}/MAPL_Tripolar.nc 
    /bin/mv til/Pfafstetter-M.til til/Pfafstetter.til
    /bin/mv rst/Pfafstetter-M.rst rst/Pfafstetter.rst
    bin/CombineRasters.x -f 0 -t ${NT} ${DATENAME}${IMO}x${POLENAME}${JMO} Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C ${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    bin/mk_runofftbl.x CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter -v $lbcsv
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter -v $lbcsv
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

if( $CUBED_SPHERE_OCEAN == TRUE ) then
    bin/CombineRasters.x -f 0 -t ${NT} CF${NC}x6C Pfafstetter >/dev/null
    bin/CombineRasters.x -t ${NT} CF${NC}x6C CF${NC}x6C-Pfafstetter
    setenv OMP_NUM_THREADS 1
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_CF${NC}x6C-Pfafstetter -v $lbcsv
    setenv OMP_NUM_THREADS ${NCPUS}
    if ($SKIPLAND != YES) bin/mkCatchParam.x -x ${NX} -y ${NY} -g CF${NC}x6C_CF${NC}x6C-Pfafstetter -v $lbcsv 
    chmod 755 bin/create_README.csh
    bin/create_README.csh
endif

/bin/mv clsm  clsm.C${NC}
/bin/cp til/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til clsm.C${NC}
if( $TRIPOL_OCEAN == TRUE ) /bin/cp til/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.TRN clsm.C${NC}
/bin/rm clsm.C${NC}/CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.file

cd clsm.C${NC}
   /bin/mv irrig.dat irrigation_${RC}.dat
   /bin/mv vegdyn.data   vegdyn_${RC}.dat
   /bin/mv nirdf.dat      nirdf_${RC}.dat
   /bin/mv visdf.dat      visdf_${RC}.dat
   /bin/mv   lai.dat   lai_clim_${RC}.data
   /bin/mv green.dat green_clim_${RC}.data
   /bin/mv lnfm.dat   lnfm_clim_${RC}.data
   /bin/mv ndvi.dat   ndvi_clim_${RC}.data

/bin/rm -f sedfile
if( $CUBED_SPHERE_OCEAN == TRUE ) then
cat > sedfile << EOF
s/${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter/OC${nc}x${nc6}-CF/g
s/CF${NC}x6C/PE${nc}x${nc6}-CF/g
EOF
sed -f sedfile       CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til > tile.file
/bin/mv -f tile.file CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til
/bin/rm -f sedfile
else
cat > sedfile << EOF
s/CF${NC}x6C/PE${nc}x${nc6}-CF/g
s/${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter/PE${imo}x${jmo}-${DATENAME}/g
EOF
sed -f sedfile       CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til > tile.file
/bin/mv -f tile.file CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til
/bin/rm -f sedfile
endif

cd ../

/bin/rm -rf         CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv clsm.C${NC} CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
                cd  CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
              mkdir clsm
            /bin/mv ar.new \
                    bf.dat \
                    ts.dat \
                    catchment.def \
                    cti_stats.dat \
                    tau_param.dat \
                    soil_param.dat \
                    mosaic_veg_typs_fracs \
		    soil_param.first \
		    README \
		    bad_sat_param.tiles \
		    lai.* \
                    AlbMap* \
		    plots \
                    CLM_veg_typs_fracs \
                    mkCatchParam.log \
                    CLM_NDep_SoilAlb_T2m \
                    CLM4.5_abm_peatf_gdp_hdm_fc \
  		    catch_params.nc4 \
		    catchcn_params.nc4 \
		    country_and_state_code.data \
                    clsm
                cd  ../ 

/bin/mv rst CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv til CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}
/bin/mv $BCJOB CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}/.
cd ../../
/bin/mv    $BCDIR/$BCNAME .
/bin/mv    $BCJOB                $BCNAME
/bin/mv    $EXPDIR/$OUTDIR/logs  $BCNAME/.
/bin/mv    $BCNAME/clsm/mkCatchParam.log $BCNAME/logs/mkCatchParam.log
#/bin/rm -r $OUTDIR

#mkdir -p IRRIG/$BCNAME/clsm
#bin/mkIrrigTiles.x -b $BCNAME -t CF${NC}x6C_${DATENAME}${IMO}x${POLENAME}${JMO}-Pfafstetter.til -r _${RC} -p $IRRIGTHRES

/bin/rm -r $OUTDIR

_EOF_
chmod 755 $BCJOB
set make_bcs_jobs = `echo $make_bcs_jobs $BCJOB`
endif

endif # End Cube Test

#######################################################################
#                        EASE Case
#######################################################################

if( $grid == ease ) then
  echo $HRCODE 

  set RS  = ${im}x${jm}
  set IM  = `echo ${im}   | awk '{printf "%4.4i", $1}'`
  set JM  = `echo ${jm}   | awk '{printf "%4.4i", $1}'`

  set             BCNAME = SMAP_${EASEVERSION}_${HRCODE}
  set             BCDIR  = $EXPDIR/$OUTDIR/$BCNAME.scratch
  set             BCJOB  = $BCDIR/$BCNAME.j
  set             THISGRID = SMAP-${EASEVERSION}-${HRCODE}

  set nfiles = `find $EXPDIR -maxdepth 5 -name ${BCNAME}".j" | wc -l`  
  if( $nfiles >= 1 ) then
    echo ""
    echo "${C1} ----------------------------------------------------${CR}"
    echo "${C1}                 Abort:                              ${CR}"
    echo "${C2} This BCS run $BCDIR ${CR}"
    echo "${C2} will create resolution dir already present: $BCNAME ${CR}"
    echo "${C2} Please delete run dir and same resolution BCS files and resubmit"
    echo "${C1} ----------------------------------------------------${CR}"
    echo ""
    exit
  endif

  mkdir -p $BCDIR 
  mkdir -p $EXPDIR/$OUTDIR/logs

  echo "${C1}     Creating:${CR} ${C2}$BCJOB${CR}"
  /bin/rm -f     $BCJOB

cat << _EOF_ > $BCJOB
#!/bin/csh -x

#SBATCH --output=$EXPDIR/$OUTDIR/logs/$BCNAME.log
#SBATCH --error=$EXPDIR/$OUTDIR/logs/$BCNAME.err
#SBATCH --account=$group
#SBATCH --time=12:00:00
#SBATCH --ntasks=28
#SBATCH --job-name=$BCNAME.j
#SBATCH --constraint=sky

cd $BCDIR

/bin/ln -s $bin_dir
source bin/g5_modules
mkdir -p til rst data/MOM5 data/MOM6 clsm/plots
cd data 
cd ../
limit stacksize unlimited

#if ( $EASEVERSION == EASEv2 ) then
   ## This section was used to make Irrigated Tiles
   ##if(${HRCODE} == M09 | ${HRCODE} == M36) then 
   ##    bin/mkLandRaster.x -x ${NX} -y ${NY} -v -t ${NT}
   ##    bin/mkEASETilesParam.x -ease_label ${HRCODE} -pfaf_til T
   ##    bin/CombineRasters.x -f 0 -t 232000000 ${THISGRID} Pfafstetter > /dev/null
   ##    bin/CombineRasters.x -t 232000000 ${THISGRID} ${THISGRID}-Pfafstetter
   ##    /bin/mv til/${THISGRID}_${THISGRID}-Pfafstetter.til  til/${THISGRID}_${THISGRID}-Pfafstetter.ind 
   ##endif
#endif

setenv MASKFILE ${MASKFILE}
setenv OMP_NUM_THREADS 1
bin/mkEASETilesParam.x -ease_label ${BCNAME} 

setenv OMP_NUM_THREADS 1
bin/mkCatchParam.x -g ${BCNAME} -v $lbcsv -x ${NX} -y ${NY}
setenv OMP_NUM_THREADS ${NCPUS}
bin/mkCatchParam.x -g ${BCNAME} -v $lbcsv -x ${NX} -y ${NY}
chmod 755 bin/create_README.csh
bin/create_README.csh

/bin/mv clsm  clsm.${IM}x${JM}
/bin/cp til/SMAP_${EASEVERSION}_${HRCODE}_${RS}.til clsm.${IM}x${JM}
##/bin/cp til//${THISGRID}_${THISGRID}-Pfafstetter.TIL clsm.${IM}x${JM}

cd clsm.${IM}x${JM}
   /bin/mv irrig.dat irrigation_${RS}_DE.dat
   /bin/mv vegdyn.data   vegdyn_${RS}_DE.dat
   /bin/mv nirdf.dat      nirdf_${RS}_DE.dat
   /bin/mv visdf.dat      visdf_${RS}_DE.dat
   /bin/mv   lai.dat   lai_clim_${RS}_DE.data
   /bin/mv green.dat green_clim_${RS}_DE.data
   /bin/mv lnfm.dat   lnfm_clim_${RS}_DE.data
   /bin/mv ndvi.dat   ndvi_clim_${RS}_DE.data


cd ../

/bin/rm -rf              SMAP_${EASEVERSION}_${HRCODE}
/bin/mv clsm.${IM}x${JM} SMAP_${EASEVERSION}_${HRCODE}
                     cd  SMAP_${EASEVERSION}_${HRCODE} 
                   mkdir clsm
                 /bin/mv ar.new \
                         bf.dat \
                         ts.dat \
                         catchment.def \
                         cti_stats.dat \
                         tau_param.dat \
                         soil_param.dat \
                         mosaic_veg_typs_fracs \
		         soil_param.first \
		         bad_sat_param.tiles \
			 README \
			 lai.* \
                         AlbMap* \
			 g5fmt \
			 vegetation.hst2 \
			 pfaf_fractions.dat \
			 plots \
                         CLM_veg_typs_fracs \
                         mkCatchParam.log \
                         Grid2Catch_TransferData.nc \
                         CLM_NDep_SoilAlb_T2m \
                         CLM4.5_abm_peatf_gdp_hdm_fc \
  		         catch_params.nc4 \
		         catchcn_params.nc4 \
			 country_and_state_code.data \
                         clsm
                     cd  ../ 

/bin/mv rst  SMAP_${EASEVERSION}_${HRCODE}
/bin/mv til  SMAP_${EASEVERSION}_${HRCODE}

cd ../../
/bin/mv    $BCDIR/$BCNAME .
/bin/mv    $BCJOB                $BCNAME
/bin/mv    $EXPDIR/$OUTDIR/logs   $BCNAME/.
/bin/mv    $BCNAME/clsm/mkCatchParam.log $BCNAME/logs/mkCatchParam.log
/bin/rm -r $OUTDIR

#mkdir -p IRRIG/$BCNAME/clsm IRRIG/$BCNAME/rst
#bin/mkIrrigTiles.x -x 43200 -y 21600 -b $BCNAME -t SMAP_${EASEVERSION}_${HRCODE}_${RS}.til -r _${RS}_DE -p $IRRIGTHRES
#/bin/cp $BCNAME/${THISGRID}_${THISGRID}-Pfafstetter.TIL IRRIG/$BCNAME/.
_EOF_


chmod 755 $BCJOB
set make_bcs_jobs = `echo $make_bcs_jobs $BCJOB`
endif # End if directory 
endif # End ease Test
end # End Atmospheric Resolution Loop

# -----------------------------

end # End Ocean Resolution Loop

#######################################################################

#echo " "
#echo "Are you planning to run ${C2}MAKE_BCS${CR} jobs on an interactive node? (Y/N)"
#echo "Enter N if you wish to submit to the SLURM queue instead                     "
#echo "-----------------------------------------------------------------------------"
#echo " "
#set dummy = `echo $<`
#set dummy = `echo $dummy | tr "[:lower:]" "[:upper:]"`
#if(.$dummy == .Y | .$dummy == YES ) then
#    foreach job ($make_bcs_jobs)
#      nohup ./$job &
#    end
#else
foreach job ($make_bcs_jobs)
set jobid="`sbatch $job |  cut -d' ' -f4`"
echo $jobid
echo $job

if( -e $job-2) then
set jobid="`sbatch --dependency=afterok:$jobid $make_bcs_jobs[2] |  cut -d' ' -f4`"
echo $jobid
exit
endif
end
#endif

